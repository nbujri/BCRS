{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "BCRS API"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Security"
    }
  ],
  "paths": {
    "/api/users/": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User account details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "isDisabled": {
                    "type": "boolean"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName",
                  "phoneNumber",
                  "address",
                  "isDisabled",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Find all users",
        "description": "Find all users",
        "operationId": "findAllUsers",
        "responses": {
          "200": {
            "description": "Users found successfully"
          }
        }
      }
    },
    "/api/users/{email}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user by email",
        "description": "Soft delete a user by setting isDisabled to true",
        "operationId": "deleteUserByEmail",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "description": "Email of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user by email",
        "description": "Update a user's information",
        "operationId": "updateUserByEmail",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "description": "Email of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Find a user by email",
        "description": "Find a user by email",
        "operationId": "findUserByEmail",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "description": "Email of the user to find",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/security/signin": {
      "post": {
        "tags": ["Security"],
        "summary": "Sign in",
        "description": "Sign in with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/api/users/{email}/security-questions": {
      "get": {
        "tags": ["Users"],
        "summary": "Get selected security questions for a user",
        "description": "Retrieve the selected security questions for a user based on their email address.",
        "operationId": "findSelectedSecurityQuestions",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "description": "The email address of the user to fetch security questions for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response containing the selected security questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "selectedSecurityQuestions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "questionText": {
                            "type": "string"
                          },
                          "answerText": {
                            "type": "string"
                          }
                        },
                        "required": ["questionText", "answerText"]
                      }
                    }
                  },
                  "required": ["email", "selectedSecurityQuestions"]
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "description": "Register a new user with the provided user data",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "selectedSecurityQuestions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "questionText": {
                              "type": "string"
                            },
                            "answerText": {
                              "type": "string"
                            }
                          },
                          "required": ["questionText", "answerText"]
                        }
                      }
                    },
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "password",
                      "selectedSecurityQuestions"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Registered"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict - User already exists with the provided email"
          }
        }
      }
    },
    "/api/users/{email}/reset-password": {
      "post": {
        "tags": ["Users"],
        "summary": "Reset user password",
        "description": "Reset the password of a user with the provided email address",
        "operationId": "resetUserPassword",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "description": "Email of the user to reset the password for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password Reset Successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User Not Found"
          }
        }
      }
    },
    "/api/security/verify/users/{email}": {
      "post": {
        "tags": ["Security"],
        "summary": "Verify user email",
        "description": "Verify if user email exists for a password reset",
        "operationId": "verifyUser",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/security/verify/users/{email}/security-questions": {
      "post": {
        "tags": ["Security"],
        "summary": "Verify user security questions",
        "description": "Verify if user answered all 3 security questions correctly",
        "operationId": "verifySecurityQuestions",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "questionText": {
                      "type": "string"
                    },
                    "answerText": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
